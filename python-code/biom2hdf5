#!/usr/bin/env python
from __future__ import division

__author__ = "Jai Ram Rideout"
__copyright__ = "Copyright 2013, BIOM-Format Project"
__credits__ = ["Jai Ram Rideout"]
__license__ = "GPL"
__url__ = "http://biom-format.org"
__version__ = "1.2.0-dev"
__maintainer__ = "Jai Ram Rideout"
__email__ = "jai.rideout@gmail.com"

import sys
import h5py

def parse_field(table_str, field):
    search_str = '"%s": "' % field
    start_idx = table_str.index(search_str) + len(search_str)
    end_idx = table_str.index('",', start_idx)
    return table_str[start_idx:end_idx]

def parse_shape(table_str):
    search_str = '"shape": ['
    start_idx = table_str.index(search_str) + len(search_str)
    end_idx = table_str.index('],', start_idx)
    dim_strs = table_str[start_idx:end_idx].split(', ')
    assert len(dim_strs) == 2
    return tuple(map(int, dim_strs))

in_fp, out_fp = sys.argv[1:]
in_f = open(in_fp, 'U')
out_f = h5py.File(out_fp, 'w')

table_str = in_f.read()
table_id = parse_field(table_str, 'id')
version = parse_field(table_str, 'format')
url = parse_field(table_str, 'format_url')
table_type = parse_field(table_str, 'type')
generated_by = parse_field(table_str, 'generated_by')
date = parse_field(table_str, 'date')
matrix_type = parse_field(table_str, 'matrix_type')
matrix_element_type = parse_field(table_str, 'matrix_element_type')
shape = parse_shape(table_str)

print table_id
print version
print url
print table_type
print generated_by
print date
print matrix_type
print matrix_element_type
print shape

in_f.close()
out_f.close()
